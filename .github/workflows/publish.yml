name: 'publish images'

on:
  push:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build psql
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: psql
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USER }}/psql

      - name: Build pgcli
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: pgcli
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USER }}/pgcli

  nix:
    name: Build images with Nix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - uses: cachix/install-nix-action@v30
      - name: Docker Login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Build with nix
        run: |
          nix build '.#docker-image'
          docker load < result
      - name: Publish
        run: |
          docker push kyokley/usql
